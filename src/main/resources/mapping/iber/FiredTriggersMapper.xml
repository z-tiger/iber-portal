<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iber.portal.dao.qrtz.FiredTriggersMapper" >
  <resultMap id="BaseResultMap" type="com.iber.portal.model.qrtz.FiredTriggers" >
    <id column="ENTRY_ID" property="entryId" jdbcType="VARCHAR" />
    <result column="TRIGGER_NAME" property="triggerName" jdbcType="VARCHAR" />
    <result column="TRIGGER_GROUP" property="triggerGroup" jdbcType="VARCHAR" />
    <result column="IS_VOLATILE" property="isVolatile" jdbcType="VARCHAR" />
    <result column="INSTANCE_NAME" property="instanceName" jdbcType="VARCHAR" />
    <result column="FIRED_TIME" property="firedTime" jdbcType="BIGINT" />
    <result column="PRIORITY" property="priority" jdbcType="INTEGER" />
    <result column="STATE" property="state" jdbcType="VARCHAR" />
    <result column="JOB_NAME" property="jobName" jdbcType="VARCHAR" />
    <result column="JOB_GROUP" property="jobGroup" jdbcType="VARCHAR" />
    <result column="IS_STATEFUL" property="isStateful" jdbcType="VARCHAR" />
    <result column="REQUESTS_RECOVERY" property="requestsRecovery" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ENTRY_ID, TRIGGER_NAME, TRIGGER_GROUP, IS_VOLATILE, INSTANCE_NAME, FIRED_TIME, PRIORITY, 
    STATE, JOB_NAME, JOB_GROUP, IS_STATEFUL, REQUESTS_RECOVERY
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from qrtz_fired_triggers
    where ENTRY_ID = #{entryId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from qrtz_fired_triggers
    where ENTRY_ID = #{entryId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.iber.portal.model.qrtz.FiredTriggers" >
    insert into qrtz_fired_triggers (ENTRY_ID, TRIGGER_NAME, TRIGGER_GROUP, 
      IS_VOLATILE, INSTANCE_NAME, FIRED_TIME, 
      PRIORITY, STATE, JOB_NAME, 
      JOB_GROUP, IS_STATEFUL, REQUESTS_RECOVERY
      )
    values (#{entryId,jdbcType=VARCHAR}, #{triggerName,jdbcType=VARCHAR}, #{triggerGroup,jdbcType=VARCHAR}, 
      #{isVolatile,jdbcType=VARCHAR}, #{instanceName,jdbcType=VARCHAR}, #{firedTime,jdbcType=BIGINT}, 
      #{priority,jdbcType=INTEGER}, #{state,jdbcType=VARCHAR}, #{jobName,jdbcType=VARCHAR}, 
      #{jobGroup,jdbcType=VARCHAR}, #{isStateful,jdbcType=VARCHAR}, #{requestsRecovery,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.iber.portal.model.qrtz.FiredTriggers" >
    insert into qrtz_fired_triggers
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="entryId != null" >
        ENTRY_ID,
      </if>
      <if test="triggerName != null" >
        TRIGGER_NAME,
      </if>
      <if test="triggerGroup != null" >
        TRIGGER_GROUP,
      </if>
      <if test="isVolatile != null" >
        IS_VOLATILE,
      </if>
      <if test="instanceName != null" >
        INSTANCE_NAME,
      </if>
      <if test="firedTime != null" >
        FIRED_TIME,
      </if>
      <if test="priority != null" >
        PRIORITY,
      </if>
      <if test="state != null" >
        STATE,
      </if>
      <if test="jobName != null" >
        JOB_NAME,
      </if>
      <if test="jobGroup != null" >
        JOB_GROUP,
      </if>
      <if test="isStateful != null" >
        IS_STATEFUL,
      </if>
      <if test="requestsRecovery != null" >
        REQUESTS_RECOVERY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="entryId != null" >
        #{entryId,jdbcType=VARCHAR},
      </if>
      <if test="triggerName != null" >
        #{triggerName,jdbcType=VARCHAR},
      </if>
      <if test="triggerGroup != null" >
        #{triggerGroup,jdbcType=VARCHAR},
      </if>
      <if test="isVolatile != null" >
        #{isVolatile,jdbcType=VARCHAR},
      </if>
      <if test="instanceName != null" >
        #{instanceName,jdbcType=VARCHAR},
      </if>
      <if test="firedTime != null" >
        #{firedTime,jdbcType=BIGINT},
      </if>
      <if test="priority != null" >
        #{priority,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="jobName != null" >
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobGroup != null" >
        #{jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="isStateful != null" >
        #{isStateful,jdbcType=VARCHAR},
      </if>
      <if test="requestsRecovery != null" >
        #{requestsRecovery,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.iber.portal.model.qrtz.FiredTriggers" >
    update qrtz_fired_triggers
    <set >
      <if test="triggerName != null" >
        TRIGGER_NAME = #{triggerName,jdbcType=VARCHAR},
      </if>
      <if test="triggerGroup != null" >
        TRIGGER_GROUP = #{triggerGroup,jdbcType=VARCHAR},
      </if>
      <if test="isVolatile != null" >
        IS_VOLATILE = #{isVolatile,jdbcType=VARCHAR},
      </if>
      <if test="instanceName != null" >
        INSTANCE_NAME = #{instanceName,jdbcType=VARCHAR},
      </if>
      <if test="firedTime != null" >
        FIRED_TIME = #{firedTime,jdbcType=BIGINT},
      </if>
      <if test="priority != null" >
        PRIORITY = #{priority,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        STATE = #{state,jdbcType=VARCHAR},
      </if>
      <if test="jobName != null" >
        JOB_NAME = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobGroup != null" >
        JOB_GROUP = #{jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="isStateful != null" >
        IS_STATEFUL = #{isStateful,jdbcType=VARCHAR},
      </if>
      <if test="requestsRecovery != null" >
        REQUESTS_RECOVERY = #{requestsRecovery,jdbcType=VARCHAR},
      </if>
    </set>
    where ENTRY_ID = #{entryId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.iber.portal.model.qrtz.FiredTriggers" >
    update qrtz_fired_triggers
    set TRIGGER_NAME = #{triggerName,jdbcType=VARCHAR},
      TRIGGER_GROUP = #{triggerGroup,jdbcType=VARCHAR},
      IS_VOLATILE = #{isVolatile,jdbcType=VARCHAR},
      INSTANCE_NAME = #{instanceName,jdbcType=VARCHAR},
      FIRED_TIME = #{firedTime,jdbcType=BIGINT},
      PRIORITY = #{priority,jdbcType=INTEGER},
      STATE = #{state,jdbcType=VARCHAR},
      JOB_NAME = #{jobName,jdbcType=VARCHAR},
      JOB_GROUP = #{jobGroup,jdbcType=VARCHAR},
      IS_STATEFUL = #{isStateful,jdbcType=VARCHAR},
      REQUESTS_RECOVERY = #{requestsRecovery,jdbcType=VARCHAR}
    where ENTRY_ID = #{entryId,jdbcType=VARCHAR}
  </update>
</mapper>