<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iber.portal.dao.enterprise.EnterpriseChargeLogMapper" >
  <resultMap id="BaseResultMap" type="com.iber.portal.model.enterprise.EnterpriseChargeLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="enterprise_id" property="enterpriseId" jdbcType="INTEGER" />
    <result column="charge_money" property="chargeMoney" jdbcType="INTEGER" />
    <result column="charge_type" property="chargeType" jdbcType="SMALLINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, enterprise_id, charge_money, charge_type, create_time, user_id, remark
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from x_enterprise_charge_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from x_enterprise_charge_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.iber.portal.model.enterprise.EnterpriseChargeLog" >
    insert into x_enterprise_charge_log (id, enterprise_id, charge_money, 
      charge_type, create_time, user_id, 
      remark)
    values (#{id,jdbcType=INTEGER}, #{enterpriseId,jdbcType=INTEGER}, #{chargeMoney,jdbcType=INTEGER}, 
      #{chargeType,jdbcType=SMALLINT}, #{createTime,jdbcType=TIMESTAMP}, #{userId,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.iber.portal.model.enterprise.EnterpriseChargeLog" >
    insert into x_enterprise_charge_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="enterpriseId != null" >
        enterprise_id,
      </if>
      <if test="chargeMoney != null" >
        charge_money,
      </if>
      <if test="chargeType != null" >
        charge_type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="enterpriseId != null" >
        #{enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="chargeMoney != null" >
        #{chargeMoney,jdbcType=INTEGER},
      </if>
      <if test="chargeType != null" >
        #{chargeType,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.iber.portal.model.enterprise.EnterpriseChargeLog" >
    update x_enterprise_charge_log
    <set >
      <if test="enterpriseId != null" >
        enterprise_id = #{enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="chargeMoney != null" >
        charge_money = #{chargeMoney,jdbcType=INTEGER},
      </if>
      <if test="chargeType != null" >
        charge_type = #{chargeType,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.iber.portal.model.enterprise.EnterpriseChargeLog" >
    update x_enterprise_charge_log
    set enterprise_id = #{enterpriseId,jdbcType=INTEGER},
      charge_money = #{chargeMoney,jdbcType=INTEGER},
      charge_type = #{chargeType,jdbcType=SMALLINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>