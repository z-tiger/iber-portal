<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iber.portal.dao.base.AreaMapper" >
  <resultMap id="BaseResultMap" type="com.iber.portal.model.base.Area" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="city_code" property="cityCode" jdbcType="VARCHAR" />
    <result column="area_name" property="areaName" jdbcType="VARCHAR" />
    <result column="creator" property="creator" jdbcType="VARCHAR" />
    <result column="modifier" property="modifier" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="latitude" property="latitude" jdbcType="VARCHAR" />
    <result column="longitude" property="longitude" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, city_code, area_name, creator, modifier, create_time, latitude, longitude
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from x_area
    where id = #{id,jdbcType=INTEGER}
  </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from x_area
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.iber.portal.model.base.Area" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into x_area (id, city_code, area_name, 
      creator, modifier, create_time, 
      latitude, longitude)
    values (#{id,jdbcType=INTEGER}, #{cityCode,jdbcType=VARCHAR}, #{areaName,jdbcType=VARCHAR}, 
      #{creator,jdbcType=VARCHAR}, #{modifier,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{latitude,jdbcType=VARCHAR}, #{longitude,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.iber.portal.model.base.Area" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into x_area
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="cityCode != null" >
        city_code,
      </if>
      <if test="areaName != null" >
        area_name,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="modifier != null" >
        modifier,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="latitude != null" >
        latitude,
      </if>
      <if test="longitude != null" >
        longitude,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cityCode != null" >
        #{cityCode,jdbcType=VARCHAR},
      </if>
      <if test="areaName != null" >
        #{areaName,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="modifier != null" >
        #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="latitude != null" >
        #{latitude,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null" >
        #{longitude,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.iber.portal.model.base.Area" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update x_area
    <set >
      <if test="cityCode != null" >
        city_code = #{cityCode,jdbcType=VARCHAR},
      </if>
      <if test="areaName != null" >
        area_name = #{areaName,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="modifier != null" >
        modifier = #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="latitude != null" >
        latitude = #{latitude,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null" >
        longitude = #{longitude,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.iber.portal.model.base.Area" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update x_area
    set city_code = #{cityCode,jdbcType=VARCHAR},
      area_name = #{areaName,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR},
      modifier = #{modifier,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      latitude = #{latitude,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="findPage" resultType="java.util.HashMap">
      select xa.id as id ,xc.name as cityName,xa.city_code as cityCode,xa.area_name as areaName,xa.creator,
      DATE_FORMAT(xa.create_time,"%Y-%m-%d") as create_time,xa.modifier,xa.longitude,xa.latitude,COUNT(xp.id) as bindNum
      from x_area xa
      INNER JOIN x_city xc on xa.city_code = xc.code
      LEFT JOIN x_park xp on xp.area_code = xa.id
      where 1=1
      <if test="area != null and area != ''">
        and xa.area_name  LIKE CONCAT('%', #{area},'%')
      </if>
      <if test="cityCode != null and cityCode != ''">
        and xa.city_code = #{cityCode}
      </if>
      group by xa.id
      order by xa.city_code,xa.area_name
      <if test="from !=null and to != null">
        limit #{from,jdbcType=INTEGER}, #{to,jdbcType=INTEGER}
      </if>

  </select>
  <select id="findPageTotalCount" resultType="java.lang.Integer">
      select COUNT(1)
      from x_area xa
      INNER JOIN x_city xc on xa.city_code = xc.code
      where 1=1
      <if test="area != null and area != ''">
        and xa.area_name  LIKE CONCAT('%', #{area},'%')
      </if>
      <if test="cityCode != null and cityCode != ''">
        and xa.city_code = #{cityCode}
      </if>
  </select>
  <select id="queryByCityCodeAndAreaName" resultMap="BaseResultMap">
    select
      <include refid="Base_Column_List" />
    from x_area
    where city_code = #{cityCode} and area_name =#{areaName}
    limit 1
  </select>
  <select id="findAreaParkPage" resultType="java.util.HashMap">
    select xp.id as id,xc.name as cityName,xp.name as parkName,xpc.name as category,xp.longitude ,xp.latitude,xp.address
    from x_park xp
    INNER JOIN x_city xc on xc.code = xp.city_code
    LEFT JOIN x_park_category xpc on xp.category = xpc.id
    where xp.area_code = #{id}
    <if test="park != null and park != ''">
      and xp.name  LIKE CONCAT('%', #{park},'%')
    </if>
    <if test="cityCode != null and cityCode != ''">
      and xp.city_code = #{cityCode}
    </if>
    <if test="from !=null and to != null">
      limit #{from,jdbcType=INTEGER}, #{to,jdbcType=INTEGER}
    </if>
  </select>
  <select id="findAreaParkPageTotalCount" resultType="java.lang.Integer">
    select COUNT(1)
    from x_park xp
    INNER JOIN x_city xc on xc.code = xp.city_code
    where xp.area_code = #{id}
    <if test="park != null and park != ''">
      and xp.name  LIKE CONCAT('%', #{park},'%')
    </if>
    <if test="cityCode != null and cityCode != ''">
      and xp.city_code = #{cityCode}
    </if>
  </select>
    <select id="findUnBindAreaParkPage" resultType="java.util.HashMap">
        select xp.id as id,xc.name as cityName,xp.name as parkName,xpc.name as category,xp.longitude ,xp.latitude,xp.address,xa.area_name as areaName
        from x_park xp
        INNER JOIN x_city xc on xc.code = xp.city_code
        LEFT JOIN x_park_category xpc on xp.category = xpc.id
        LEFT JOIN x_area xa on xa.id = xp.area_code
        where xp.area_code != #{id}
        <if test="park != null and park != ''">
            and xp.name  LIKE CONCAT('%', #{park},'%')
        </if>
        <if test="address != null and address != ''">
            and xp.address  LIKE CONCAT('%', #{address},'%')
        </if>
        <if test="cityCode != null and cityCode != ''">
            and xp.city_code = #{cityCode}
        </if>
        <if test="from !=null and to != null">
            limit #{from,jdbcType=INTEGER}, #{to,jdbcType=INTEGER}
        </if>
    </select>
    <select id="findUnBindAreaParkPageTotalCount" resultType="java.lang.Integer">
        select COUNT(1)
        from x_park xp
        INNER JOIN x_city xc on xc.code = xp.city_code
        where xp.area_code != #{id}
        <if test="park != null and park != ''">
            and xp.name  LIKE CONCAT('%', #{park},'%')
        </if>
        <if test="address != null and address != ''">
            and xp.address  LIKE CONCAT('%', #{address},'%')
        </if>
        <if test="cityCode != null and cityCode != ''">
            and xp.city_code = #{cityCode}
        </if>
    </select>
    <select id="getAreaGroupByCity" resultType="java.util.HashMap">
        select xa.id as 'value',xa.area_name as text,xc.name as 'group'
        from x_area xa
        inner join x_city xc on xc.code = xa.city_code
        order by xc.name,xa.area_name
    </select>

</mapper>